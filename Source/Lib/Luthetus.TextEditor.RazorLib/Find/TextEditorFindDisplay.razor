@using Fluxor.Blazor.Web.Components;
@using Luthetus.TextEditor.RazorLib.Find.InternalComponents
@inherits FluxorComponent

@{ var findProviderState = FindProviderState.Value; }

<div class="bte_find">
    <div class="bte_find-tabs">
        @foreach (var findProvider in findProviderState.FindProvidersList)
        {
            <FindProviderTabDisplay FindProvider="findProvider"
                             IsActive="findProvider.FindProviderKey == findProviderState.ActiveFindProviderKey" />
        }
    </div>
    
    <div class="bte_find-body">

        SearchQuery:&nbsp;
        <input class="bcrl_input"
               @bind="SearchQuery"
               @bind:event="oninput"/>

        <button class="bcrl_button"
                @onclick="() => DoSearchOnClickAsync(findProviderState)">
            Do Search
        </button>

        @{ var activeFindProvider = findProviderState.ActiveFindProviderOrDefault(); }

        @if (activeFindProvider is null)
        {
            @: null active find provider
        }
        else
        {
            @: @activeFindProvider.DisplayName
        }

        @if (_isSearching)
        {
            <IconLoading/>
        }
        else
        {
            <div>
                Not Searching
            </div>
        }
    </div>
</div>